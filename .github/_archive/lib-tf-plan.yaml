name: Plan

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to run plan on'
        type: string
        required: true
      aws_account_id:
        description: 'AWS account id to deploy to'
        type: string
        required: true
      aws_role_name:
        description: 'AWS role name to assume'
        type: string
        required: true
      aws_region:
        description: 'AWS region of the deployment'
        type: string
        required: true
      tf_dir:
        description: 'Path to the terraform configuration to validate'
        type: string
        required: true
      tf_state_bucket:
        description: 'Name of the bucket to store the terraform state in'
        type: string
        required: true
      tf_state_key:
        description: 'Name of the key to store the terraform state in'
        type: string
        required: true

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  plan:
    runs-on: ubuntu-latest
    name: Create a plan
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Is this needed? https://docs.github.com/en/actions/using-workflows/reusing-workflows
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role_name }}
          aws-region: ${{ inputs.aws_region }}

      - name: terraform plan
        uses: dflook/terraform-plan@v1
        with:
          path: ${{ inputs.tf_dir }}
          label: ${{ inputs.environment }}
          backend_config: |
            backend=s3
            bucket=${{ inputs.tf_state_bucket }}
            key=${{ inputs.tf_state_key }}
          variables: |
            environment="${{ inputs.environment }}"
            github_repo="${{ github.event.repository.name }}"
            region="${{ inputs.aws_region }}"
          var_file: |
            ${{ inputs.tf_dir }}/environment/${{ inputs.environment }}.tfvars
