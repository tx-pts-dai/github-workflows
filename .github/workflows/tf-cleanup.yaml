# Workflow to cleanup Terraform workspaces
# Can be used when a PR is closed or merged
# This workflow will destroy the Terraform workspace and remove the state file from the backend
on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy"
        type: string
      aws_account_id:
        description: "The AWS account ID."
        type: string
      aws_region:
        description: "The AWS region."
        type: string
      aws_role_name:
        description: "The name of the role to assume with OIDC."
        type: string
      aws_oidc_role_arn:
        description: "AWS OIDC IAM role to assume"
        type: string
      tf_dir:
        description: "Terraform directory"
        type: string
      tf_backend_configs:
        description: "Terraform backend config cli arguments"
        type: string
      tf_backend_config_files:
        description: "List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace."
        type: string
      tf_pre_run:
        description: "Command to run before Terraform is executed."
        type: string
      tf_workspace:
        description: "Terraform workspace"
        type: string
jobs:
  cleanup:
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
      cancel-in-progress: false
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      ENVIRONMENT: ${{ inputs.environment }}
      AWS_DEFAULT_REGION: ${{ inputs.aws_region || vars.aws_region}}
      TF_DIR: ${{ inputs.tf_dir || vars.tf_dir }}
      TF_BACKEND_CONFIGS: ${{ inputs.tf_backend_configs || vars.tf_backend_configs }}
      TF_BACKEND_CONFIG_FILES: ${{ inputs.tf_backend_config_files || vars.tf_backend_config_files }}
      TF_VAR_FILES: ${{ inputs.tf_var_files || vars.tf_var_files }}
      TF_VARS: ${{ inputs.tf_vars || vars.tf_vars }}
      TF_WORKSPACE: ${{ inputs.tf_workspace || vars.tf_workspace || github.head_ref}}
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        env:
          ROLE_TO_ASSUME: ${{ inputs.aws_oidc_role_arn || vars.aws_oidc_role_arn || format('arn:aws:iam::{0}:role/{1}', inputs.aws_account_id, inputs.aws_role_name) }}
          AWS_REGION: ${{ inputs.aws_region || vars.aws_region || 'eu-central-1' }}
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: terraform destroy
        uses: dflook/terraform-destroy-workspace@371a74d6159f2dd763b43e9c421707d3d6d5d151 # v1
        env:
          TERRAFORM_PRE_RUN: |
            AWS_CLI_VERSION=2.15.36
            if [ -z "${{ inputs.tf_pre_run }}" ]; then
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWS_CLI_VERSION}.zip" -o "awscliv2.zip" && unzip -qq awscliv2.zip && ./aws/install
            else
              eval "${{ inputs.tf_pre_run }}"
            fi
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          path: ${{ env.TF_DIR}}
          backend_config: ${{ env.TF_BACKEND_CONFIGS }}
          backend_config_file: ${{ env.TF_BACKEND_CONFIG_FILES }}
          var_file: ${{ env.TF_VAR_FILES }}
          variables: ${{ env.TF_VARS }}
