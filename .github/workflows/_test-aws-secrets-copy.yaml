on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/_test-aws-secrets-copy.yaml'
      - '.github/workflows/aws-secrets-copy.yaml'
  push:
    branches:
      - main
# Workflow to test the aws-copy-secret workflow
# Will create 2 temporary secrets
#  - tmp-source-$GITHUB_SHA: to be used as the secret to copy from
#  - tmp-existing-$GITHUB_SHA: to be used as an existing secret where the value should be updated
# Will run the workflow to copy the tmp-source secret to
#  - tmp-existing-$GITHUB_SHA: the existing secret
#  - tmp-destination-1-$GITHUB_SHA: workflow with default value
#  - tmp-destination-2-$GITHUB_SHA: workflow with all sets values
# Will display and delete the created secrets
permissions:
  contents: read
  id-token: write
  pull-requests: write
jobs:
  create_source_secrets:
    name: Create the source secrets
    runs-on: ubuntu-latest
    environment: sandbox
    strategy:
      matrix:
        secret:
          - name: "tmp-source-${{ github.sha }}"
            value: '{"username": "sample", "password": "sample"}'
            description: "Temporary source secret to test tx-pts-dai/github-workflows/aws-copy-secret workflow. Should exists only for the duration of the workflow (<5min). Can be deleted if it's older than 5 minutes"
          - name: "tmp-existing-${{ github.sha }}"
            value: 'should be updated'
            description: "Temporary existing secret to test tx-pts-dai/github-workflows/aws-copy-secret workflow. Should exists only for the duration of the workflow (<5min). Can be deleted if it's older than 5 minutes"
    steps:
      - name: aws login
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: "eu-central-1"
          role-to-assume: ${{ vars.aws_oidc_role_arn }}
      - name: create_secret
        env:
          SECRET_NAME: ${{ matrix.secret.name }}
          SECRET_VALUE: ${{ matrix.secret.value }}
          SECRET_DESCRIPTION: ${{ matrix.secret.description }}
        run: |
          aws secretsmanager create-secret --name "$SECRET_NAME" --secret-string "$SECRET_VALUE" --description "$SECRET_DESCRIPTION"

  copy_secret:
    needs: create_source_secrets
    strategy:
      matrix:
        secret:
          - name: "tmp-existing-${{ github.sha }}"
          - name: "tmp-destination-1-${{ github.sha }}"
          - name: "tmp-destination-2-${{ github.sha }}"
            description: "Copy of tmp-existing secret updated by aws-create-secret workflow, should exists only for the duration of the workflow (<5min). Can be deleted if it's older than 5 minutes"

    uses: ./.github/workflows/aws-secrets-copy.yaml
    with:
      source_aws_region: "eu-central-1"
      source_aws_oidc_role_arn: ${{ format('arn:aws:iam::{0}:role/{1}', vars.AWS_ACCOUNT_ID, vars.AWS_ROLE_NAME) }}
      source_secret_name: "tmp-source-${{ github.sha }}"
      destination_aws_region: "eu-central-1"
      destination_aws_oidc_role_arn:  ${{ format('arn:aws:iam::{0}:role/{1}', vars.AWS_ACCOUNT_ID, vars.AWS_ROLE_NAME) }}
      destination_secret_name: ${{ matrix.secret.name }}
      secret_description: ${{ matrix.secret.description || null }}
      aws_tags: '[{"Key":"GitHub_Repo","Value":"${{ github.repository }}"},{"Key":"Created", "Value":"Manually"}]'
  delete_secrets:
    needs: copy_secret
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - name: aws login
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: "eu-central-1"
          role-to-assume: ${{ vars.aws_oidc_role_arn }}
      - name: display secrets
        run: |
          for SECRET_PREFIX in tmp-source tmp-existing tmp-destination-1 tmp-destination-2; do
            SECRET_NAME=$SECRET_PREFIX-$GITHUB_SHA
            echo $SECRET_NAME value:
            aws secretsmanager get-secret-value --secret-id $SECRET_NAME --query SecretString --output json|sed s/^/'  '/
            echo $SECRET_NAME infos:
            aws secretsmanager describe-secret --secret-id $SECRET_NAME --query '{Description:Description, Tags:Tags}' --output json|sed s/^/'  '/
            echo aws secretsmanager delete-secret --secret-id $SECRET --recovery-window-in-days 7
            aws secretsmanager delete-secret --secret-id $SECRET --recovery-window-in-days 7 |sed s/^/'  '/
          done
