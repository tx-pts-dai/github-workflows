# Default release on push in main
name: Release
on:
  push:
    branches:
    - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

    - name: Retrieve version
      id: version
      run: |
        git fetch --tags
        RELEASE_TAG=$(git tag | sort -V | tail -1 | awk -F. '{print $1"."$2"."($3+1)}')
        if [ "$RELEASE_TAG" = "" ]; then
          TAG_NAME="v0.0.1"
        else
          TAG_NAME="$RELEASE_TAG"
        fi
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

        MAJOR_VERSION=$(echo $TAG_NAME | awk -F. '{print $1}')
        MINOR_VERSION=$(echo $TAG_NAME | awk -F. '{print $1"."$2}')
        echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV
        echo "MINOR_VERSION=$MINOR_VERSION" >> $GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@69320dbe05506a9a39fc8ae11030b214ec2d1f87 # v2
      with:
        tag_name: ${{ steps.version.outputs.TAG_NAME }}
        generate_release_notes: true

    - name: Update major version tag
      run: |
        git tag -fa ${{ steps.version.outputs.MAJOR_VERSION }} -m "Update major version tag"
        git push origin ${{ steps.version.outputs.MAJOR_VERSION }} --force

    - name: Update minor version tag
      run: |
        git tag -fa ${{ steps.version.outputs.MINOR_VERSION }} -m "Update minor version tag"
        git push origin ${{ steps.version.outputs.MINOR_VERSION }} --force
