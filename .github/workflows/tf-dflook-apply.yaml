# Terraform Apply Workflow using the action dflook/terraform-github-actions
# This workflow is used to apply Terraform changes to an environment.
# This workflow utilizes either github environments variables or workflow inputs to pass to the terraform actions
on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy."
        required: true
        type: string
      aws_account_id:
        description: "The AWS account ID."
        type: string
      aws_region:
        description: "The AWS region."
        type: string
      aws_role_name:
        description: "The name of the role to assume with OIDC."
        type: string
      aws_oidc_role_arn:
        description: "AWS OIDC IAM role to assume"
        type: string
      tf_dir:
        description: "Path to the Terraform root module to apply."
        type: string
      tf_backend_configs:
        description: "ist of Terraform backend config values, one per line."
        type: string
      tf_backend_config_files:
        description: "List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace."
        type: string
      tf_var_files:
        description: "List of tfvars files to use, one per line. Paths should be relative to the GitHub Actions workspace."
        type: string
      tf_vars:
        description: "Variables to set for the Terraform plan. This should be valid Terraform syntax."
        type: string
jobs:
  apply:
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_DIR: ${{ inputs.tf_dir || vars.tf_dir }}
      TF_BACKEND_CONFIGS: ${{ inputs.tf_backend_configs || vars.tf_backend_configs }}
      TF_BACKEND_FILES: ${{ inputs.tf_backend_files || vars.tf_backend_files }}
      TF_VAR_FILES: ${{ inputs.tf_var_files || vars.tf_var_files }}
      TF_VARS: ${{ inputs.tf_vars || vars.tf_vars }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        env:
          ROLE_TO_ASSUME: ${{ vars.aws_oidc_role_arn || format('arn:aws:iam::{0}:role/{1}', inputs.aws_account_id, inputs.aws_role_name) }}
          AWS_REGION: ${{ inputs.aws_region || vars.aws_region || 'eu-central-1' }}
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Apply
        uses: dflook/terraform-apply@v1
        with:
          label: ${{ inputs.environment }}
          path: ${{ env.TF_DIR}}
          backend_config: ${{ env.TF_BACKEND_CONFIGS }}
          backend_config_file: ${{ env.TF_BACKEND_FILES }}
          var_file: ${{ env.TF_VAR_FILES }}
          variables: ${{ env.TF_VARS }}
          auto_approve: true
