# Terraform feature branch workflow
# Creates a new terraform workspace based on the branch name
# This workflow utilizes either github environments variables or workflow inputs to pass to the terraform actions
on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy"
        type: string
        required: true
      aws_region:
        description: "AWS region"
        type: string
      aws_oidc_role_arn:
        description: "AWS OIDC IAM role to assume"
        type: string
      tf_dir:
        description: "Terraform directory"
        type: string
      tf_backend_configs:
        description: "Terraform backend config cli arguments"
        type: string
      tf_backend_config_file:
        description: "Terraform backend config file"
        type: string
      tf_var_files:
        description: "New line separated list of terraform variable files"
        type: string
      tf_vars:
        description: "New line separated list of terraform variables"
        type: string
      tf_pre_run:
        description: "Command to run before Terraform is executed."
        type: string
jobs:
  feature:
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
      cancel-in-progress: false
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      ENVIRONMENT: ${{ inputs.environment }}
      AWS_DEFAULT_REGION: ${{ inputs.aws_region || vars.aws_region}}
      TF_DIR: ${{ inputs.tf_dir || vars.tf_dir }}
      TF_BACKEND_CONFIGS: ${{ inputs.tf_backend_configs || vars.tf_backend_configs }}
      TF_BACKEND_CONFIG_FILE: ${{ inputs.tf_backend_config_file || vars.tf_backend_config_file }}
      TF_VAR_FILES: ${{ inputs.tf_var_files || vars.tf_var_files }}
      TF_VARS: ${{ inputs.tf_vars || vars.tf_vars }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        env:
          ROLE_TO_ASSUME: ${{ vars.aws_oidc_role_arn || format('arn:aws:iam::{0}:role/{1}', inputs.aws_account_id, inputs.aws_role_name) }}
          AWS_REGION: ${{ inputs.aws_region || vars.aws_region || 'eu-central-1' }}
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Use branch workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          workspace: ${{ github.head_ref }}
          path: ${{ env.TF_DIR }}
          backend_config: ${{ env.TF_BACKEND_CONFIGS }}
          backend_config_file: ${{ env.TF_BACKEND_CONFIG_FILE }}

      - name: Deploy test infrastrucutre
        uses: dflook/terraform-apply@v1
        env:
          TERRAFORM_PRE_RUN: |
            AWS_CLI_VERSION=2.15.36
            if [ -z "${{ inputs.tf_pre_run }}" ]; then
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWS_CLI_VERSION}.zip" -o "awscliv2.zip" && unzip -qq awscliv2.zip && ./aws/install
            else
              eval "${{ inputs.tf_pre_run }}"
            fi
        with:
          workspace: ${{ github.head_ref }}
          path: ${{ env.TF_DIR}}
          backend_config: ${{ env.TF_BACKEND_CONFIGS }}
          backend_config_file: ${{ env.TF_BACKEND_CONFIG_FILE }}
          var_file: ${{ env.TF_VAR_FILES }}
          variables: ${{ env.TF_VARS }}
          auto_approve: true
