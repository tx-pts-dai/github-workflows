# Workflow to deploy feature branches
# Creates a new terraform workspace based on the branch name
# This workflow utilizes github environments to store secrets and varibles.
on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy to"
        type: string
        required: true
      aws_region:
        description: "AWS region"
        type: string
        default: "eu-central-1"
      aws_oidc_role_arn:
        description: "AWS OIDC IAM role to assume"
        type: string
      build_type:
        description: "Type of build: Docker | Lambda"
        type: string
      tf_dir:
        description: "Terraform directory"
        type: string
      tf_backend_configs:
        description: "Terraform backend config cli arguments"
        type: string
      tf_var_files:
        description: "New line separated list of terraform variable files"
        type: string
      tf_vars:
        description: "New line separated list of terraform variables"
        type: string

env:
  ENVIRONMENT: ${{ inputs.environment }}
  AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
  AWS_ROLE_TO_ASSUME: ${{ inputs.aws_oidc_role_arn || vars.aws_oidc_role_arn }}
  TF_DIR: ${{ inputs.tf_dir || vars.tf_dir }}
  TF_BACKEND_CONFIGS: ${{ inputs.tf_backend_configs || vars.tf_backend_configs }}
  TF_VAR_FILES: ${{ inputs.tf_var_files || vars.tf_var_files }}
  TF_VARS: ${{ inputs.tf_vars || vars.tf_vars }}

jobs:
  terraform:
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Use branch workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: ${{ env.TF_DIR }}
          workspace: ${{ github.head_ref }}
          backend_config: ${{ env.TF_BACKEND_CONFIGS }}

      - name: Deploy test infrastrucutre
        uses: dflook/terraform-apply@v1
        with:
          path: ${{ env.TF_DIR}}
          workspace: ${{ github.head_ref }}
          backend_config: ${{ env.TF_BACKEND_CONFIGS }}
          var_file: ${{ env.TF_VAR_FILES }}
          variables: ${{ env.TF_VARS }}
          auto_approve: true
